version: '3'
services:
    queue:
        image: rabbitmq:3-management
        container_name: queue
        restart: always
        ports:
            - "5672:5672"
            - "15672:15672"
        volumes:
            - rabbitmq:/var/lib/rabbitmq
            - ./logs/queue:/var/log/rabbitmq
    mcserver:
        build:
            context: .
            dockerfile: mcserver/Dockerfile
        container_name: mcserver
        restart: always
        ports:
            - "25565:25565"
            - "8100:8100"
        volumes:
            - worlds:/opt/mcserver/worlds
            - gsit:/opt/mcserver/plugins/GSit/data
            - maps:/opt/mcserver/plugins/bluemap/web
            - tabtps:/opt/mcserver/plugins/tabtps/userdata
            - ./logs/mcserver:/opt/mcserver/logs
            - ./logs/bluemap:/bluemap/logs
        logging:
            driver: 'json-file'
            options:
                max-size: '200k'
                max-file: '10'
        stdin_open: true
        tty: true
        deploy:
            resources:
                limits:
                    cpus: '2'
                    memory: 10G
                reservations:
                    cpus: '1'
                    memory: 10M
    ip_detector:
        build:
            context: .
            dockerfile: ip_detector/Dockerfile
        container_name: ip_detector
        restart: always
        volumes:
            - ./ip.txt:/ip/ip.txt
            - ./logs/ip_detector:/logs
        depends_on:
            - queue
    announcer:
        build:
            context: .
            dockerfile: announcer/Dockerfile
        container_name: announcer
        restart: always
        depends_on:
            - queue
        volumes:
            - ./logs/announcer:/logs
        env_file:
            -   ./.env
volumes:
    worlds:
    rabbitmq:
    gsit:
    maps:
    tabtps:
